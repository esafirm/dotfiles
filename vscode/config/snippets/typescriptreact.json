{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Classic Console Log": {
    "prefix": "clog",
    "body": ["console.log($1)"]
  },
  "StyleSheet create": {
    "prefix": "initsty",
    "body": "const styles = StyleSheet.create({$1})"
  },
  "Style in React Component": {
    "prefix": "rnsty",
    "body": "style={ $1 }"
  },
  "Importing": {
    "prefix": "imp",
    "body": "import $2 from '$1'"
  },
  "React Native Component": {
    "prefix": "rncomp",
    "body": [
      "import React from 'react'",
      "import { $1 } from 'react-native'",
      "",
      "export default function $TM_FILENAME_BASE() {",
      "}"
    ]
  },
  "Empty function": {
    "prefix": "efu",
    "body": ["() => {}"]
  },
  "Props": {
    "prefix": "rnp",
    "body": ["interface ${TM_FILENAME_BASE}Props { $1 }"]
  },
  "State": {
    "prefix": "rns",
    "body": ["interface ${TM_FILENAME_BASE}State { $1 }"]
  },
  "Render": {
    "prefix": "ren",
    "body": ["public render() {", "  return ( ", "     $1", "  )", "}"]
  }
}
